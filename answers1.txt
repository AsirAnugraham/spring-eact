6. What is map in JavaScript? 
Definition and Usage. map() creates a new array from calling a function for every array element. 
-map() calls a function once for each element in an array. map() does not execute the function for empty elements.
-map() does not change the original array.

-map() creates a new array from calling a function for every array element.

-map() calls a function once for each element in an array.

-map() does not execute the function for empty elements.

-map() does not change the original array.

7) How to change the embedded server in spring boot? 

-By default, the Spring Boot framework uses 
-Tomcat as the embedded server of choice.
-However,you could override this default setting by specifying certain configuration settings. 
-For instance, if you want to use a Jetty dependency instead, then use an element in the XML configuration file, 
and specify a element as well:
-we created a web-based Spring Boot application that uses Embedded Tomcat as the default server running on the default port, 8080. 
-Spring Boot supports Tomcat, Undertow, and Jetty as embedded servers. 
-Now, we will change and/or configure the default embedded server and common properties to all the available servers.

8) What is HashMap?

-HashMap is a collection class in Java. You can use it to store key and value pairs. 
-Its performance depends on the initial capacity and the load factor.
-HashMap is a collection class in Java. 
-You can use it to store key and value pairs. 
-Its performance depends on the initial capacity and the load factor. 
-HashMap has various methods that allow you to use its hash table data structure. 
-HashMap allows null values and the null key.
-Also, HashMap doesn’t sort the stored keys and values. If you want to use the HashMap class and its methods, you’ll have to import java.util.HashMap (or its superclass).
-HashMap implements a Serializable and Cloneable interface.

9) What are JSX, Call back Function?

-JSX stands for JavaScript XML.

-JSX allows us to write HTML in React.

-JSX makes it easier to write and add HTML in React.
-JSX allows us to write HTML elements in JavaScript and place them in the DOM without
 any createElement()  and/or appendChild() methods.

*Using JSX, you may write succinct HTML/XML-like structures 
(e.g., DOM-like tree structures) in the same file as JavaScript code, 
and Babel will convert these expressions into actual JavaScript code. 
*Instead of putting JavaScript into HTML as in the past, 
*JSX allows us to put HTML into JavaScript.

10) What is list, Tree set, Final & Finally, Spring? 

TreeSet is one of the most important implementations of the SortedSet interface in Java that uses a Tree for storage. 
*The ordering of the elements is maintained by a set using their natural ordering whether or not an explicit comparator is provided. 
*This must be consistent with equals if it is to correctly implement the Set interface.  
-TreeSet is basically an implementation of a self-balancing binary search tree like a Red-Black Tree. 
*Therefore operations like add, remove, and search takes O(log(N)) time. 
*The reason is that in a self-balancing tree, it is made sure that the height of the tree is always O(log(N)) for all the operations.
-The final keyword can be used with class method and variable. 
*A final class cannot be inherited, a final method cannot be overridden and a final variable cannot be reassigned. 
-The finally keyword is used to create a block of code that follows a try block

11) What is MongoDB?
MongoDB is an open source NoSQL database management program. 
*NoSQL is used as an alternative to traditional relational databases. 
*NoSQL databases are quite useful for working with large sets of distributed data. 
*MongoDB is a tool that can manage document-oriented information, store or retrieve information.

12) What is State hook?
*useState is a Hook that allows you to have state variables in functional components. 
*You pass the initial state to this function and it returns a variable with the current state value (not necessarily the initial state) and another function to update this value.

13) What is the output of console.log(a) statement?
*The console. log() method outputs a message to the web console. 
*The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects

14)What are Error boundaries?
*Error boundaries are React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed. 
*Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.

15)write code to create button in functional component? 

import React from 'react';

const Button = () => {
    return (
        <button className="button">
            Generate Countdown
        </button>
    )
}

export default Button;

16)What is overloading?

Overloading refers to the ability to use a single identifier to define multiple methods of a class that differ in their input and output parameters. 
*Overloaded methods are generally used when they conceptually execute the same task but with a slightly different set of parameters.

17)What are methods in React?
React has four built-in methods that gets called, in this order, when mounting a component: 
*constructor () 
*getDerivedStateFromProps () 
*render () 
*componentDidMount ()

18)Explain static and dynamic overloading?
-Static polymorphism : Same method name is overloaded with different type or number of parameters in same class (different signature). 
*Targeted method call is resolved at compile time. 
-Dynamic polymorphism: Same method is overridden with same signature in different classes.

19)What UseState and UseEffect do?
*In simple words, useState allows our functional components which used to be stateless become stateful. 
*And useEffect allows our functional components leverage the component lifecycle hooks which were, in the past, only supported for class components.

20)How many times can we use USeEffect?
You can have multiple useEffects in your code and this is completely fine! As hooks docs say, you should separate concerns. 
-Multiple hooks rule also applies to useState - you can have multiple useState in one component to separate different part of the state, you don't have to build one complicated state object.

21)Where we can use Virtual Dom?
*A virtual DOM is a lightweight JavaScript representation of the Document Object Model (DOM) used in declarative 
*web frameworks such as React, Vue.js, and Elm. 
*Updating the virtual DOM is comparatively faster than updating the actual DOM (via js). 
*Thus, the framework is free to make unnecessary changes to the virtual DOM relatively cheaply.

22)ES6 Function?
*Functions are the building blocks of readable, maintainable, and reusable code. 
*Functions are defined using the function keyword. 
*Following is the syntax for defining a standard function.

23).Error vs Exception Difference? 

		Errors							Exceptions
1.The error indicates trouble that primarily
occurs due to the scarcity of system resources. 1.The exceptions are the issues that can appear at runtime and compile time.
2.It is not possible to recover from an error. 	2.It is possible to recover from an exception.
3.In java, all the errors are unchecked.	3.In java, the exceptions can be both checked and unchecked.
4.The system in which the program 
is running is responsible for errors.	        4.The code of the program is accountable for exceptions.
5.They are described in the 
java.lang.Error package.			5.They are described in java.lang.Exception package

24)How can we find the prime no.?
By the definition of a prime number, we know that the prime numbers have only two 
factors present in it. The two factors would be 1 and the original number itself. 
Hence, we need to find here the numbers which consist of only two factors. This is 
possible by using a simple method, which is called prime factorisation.

25) Which methods can we use to pick the element randomly from the arraylist?
*ArrayList is a part of collection framework and is present in java.util package. 
*It provides us with dynamic arrays in Java.
*Generating random numbers from the list have a good utility value 
*There are various methods to get a random element from the ArrayList:
-Using Math.random()
-Using ArrayList Shuffle
-Using Random class

26. OOPs Concept ?

Object-oriented programming is a model that provides different types of concepts, 
such as inheritance, abstraction, polymorphism, etc. These concepts aim to implement 
real-world entities in programs. They create working methods and variables to reuse 
them without compromising security.
List of OOPs Concepts in Java
*Objects
*Classes
*Object 
*Class
*Abstraction
*Inheritance 
*Polymorphism
*Encapsulation

-What are Objects?
Objects are always called instances of a class which are created from class in java
or any other language. They have states and behaviour.
-What are Classes?
Classes are like object constructors for creating objects. The collection of objects
is said to be a class. Classes are said to be logical quantities. Classes don’t 
consume any space in the memory.
-What is Abstraction?  
Abstraction is a process which displays only the information needed and hides the 
unnecessary information. We can say that the main purpose of abstraction is data 
hiding. Abstraction means selecting data from a large number of data to show the 
information needed, which helps in reducing programming complexity and efforts.
-What is Inheritance?
Inheritance is a method in which one object acquires/inherits another object’s 
properties, and inheritance also supports hierarchical classification. The idea 
behind this is that we can create new classes built on existing classes, i.e., when 
you inherit from an existing class, we can reuse methods and fields of the parent 
class.  
-What is Polymorphism?
Polymorphism refers to many forms, or it is a process that performs a single action
in different ways. It occurs when we have many classes related to each other by 
inheritance. Polymorphism is of two different types, i.e., compile-time polymorphism
and runtime polymorphism. One of the examples in Compile time polymorphism is that 
when we overload a static method in java. Run time polymorphism is also called a 
dynamic method dispatch is a method in which a call to an overridden method is 
resolved at run time rather than compile time.
-What is Encapsulation?
Encapsulation is one of the concepts in OOPs concepts; it is the process that binds 
together the data and code into a single unit and keeps both from being safe from 
outside interference and misuse. In this process, the data is hidden from other 
classes and can be accessed only through the current class’s methods.

27) What is spring?
The Spring Framework (Spring) is an open-source application framework that provides infrastructure support for developing Java applications. 
*One of the most popular Java Enterprise Edition (Java EE) frameworks, Spring helps developers create high performing applications using plain old Java objects (POJOs).

28)What are Props and State? 
	PROPS								STATE

1.The Data is passed from one component to another.	1.The Data is passed within the component only.
2.It is Immutable (cannot be modified).			2.It is Mutable ( can be modified).
3.Props can be used with state and functional 
components.					        3.State can be used only with the state components/class component 
4.Props are read-only.					4.State is both read and write.

29. Difference Between Interface and Abstract Class?
	Abstract class							Interface
1) Abstract class can have abstract and non-abstract methods.	1.Interface can have only abstract methods. Since Java 8, it can have default and static methods also.
2) Abstract class doesn't support multiple inheritance.		2.Interface supports multiple inheritance.
3) Abstract class can have final, non-final, static and 
non-static variables.						3.Interface has only static and final variables.
4) Abstract class can provide the implementation of interface.	4.Interface can't provide the implementation of abstract class.
5) The abstract keyword is used to declare abstract class.	5.The interface keyword is used to declare interface.

30) What is Event Handling and write code for the Onclick Event? 
<button onclick="myFunction()">Click me</button>

31) Difference between final, finally and finalize? 
The final, finally, and finalize are keywords in Java that are used in exception 
handling. Each of these keywords has a different functionality. The basic difference
between final, finally and finalize is that the final is an access modifier, finally
is the block in Exception Handling and finalize is the method of object class.

32)What is Map() in java?
A Map is an object that maps keys to values. A map cannot contain duplicate keys: 
Each key can map to at most one value. It models the mathematical function abstraction.

33)Types of Polymorphism?
There are two types of polymorphism in Java: compile-time polymorphism and runtime 
polymorphism. We can perform polymorphism in java by method overloading and method 
overriding.

34)Working of crud operation? 
CRUD Meaning: CRUD is an acronym that comes from the world of computer programming 
and refers to the four functions that are considered necessary to implement a 
persistent storage application: create, read, update and delete. 

35)Reverse the String?
import java.io.*;
import java.util.Scanner;
 
class GFG {
    public static void main (String[] args) {
       
        String str= "Geeks", nstr="";
        char ch;
       
      System.out.print("Original word: ");
      System.out.println("Geeks"); //Example word
       
      for (int i=0; i<str.length(); i++)
      {
        ch= str.charAt(i); //extracts each character
        nstr= ch+nstr; //adds each character in front of the existing string
      }
      System.out.println("Reversed word: "+ nstr);
    }
}

38) What is an actuator? 
An actuator is a device that produces a motion by converting energy and signals 
going into the system. The motion it produces can be either rotary or linear. An 
actuator is a device that produces a motion by converting energy and signals going 
into the system.

39)What is the promise in JavaScript? 
The Promise object represents the eventual completion (or failure) of an 
asynchronous operation and its resulting value.

41) What is hoisting? 
JavaScript Hoisting refers to the process whereby the interpreter appears to move
the declaration of functions, variables or classes to the top of their scope, prior 
to execution of the code.

42)What is use state() in react? 
Here, useState is a Hook (we'll talk about what this means in a moment). We call it
inside a function component to add some local state to it. React will preserve this
state between re-renders.
